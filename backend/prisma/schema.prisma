generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String
  profileImage    String?
  location        String?
  bio             String?
  interests       String[]  @default([])
  createdAt       DateTime  @default(now())
  first_name      String?
  last_name       String?
  posts           Post[]
  receivedReviews Review[]  @relation("Recipient")
  reviews         Review[]  @relation("Reviewer")
  sessions        Session[] @relation("ParticipantSessions")
}

model Session {
  id            Int      @id @default(autoincrement())
  title         String
  description   String?
  date          DateTime
  location      String
  postId        Int
  participantId Int
  createdAt     DateTime @default(now())
  participant   User     @relation("ParticipantSessions", fields: [participantId], references: [id])
  post          Post     @relation(fields: [postId], references: [id])
}

model Review {
  id          Int      @id @default(autoincrement())
  comment     String
  reviewerId  Int
  recipientId Int
  createdAt   DateTime @default(now())
  postId      Int?
  post        Post?    @relation(fields: [postId], references: [id])
  recipient   User     @relation("Recipient", fields: [recipientId], references: [id])
  reviewer    User     @relation("Reviewer", fields: [reviewerId], references: [id])
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  category    String
  type        PostType
  location    String
  image       String?
  userId      Int
  createdAt   DateTime  @default(now())
  numLikes    Int       @default(0)
  user        User      @relation(fields: [userId], references: [id])
  reviews     Review[]
  sessions    Session[]
}

enum PostType {
  OFFER
  REQUEST
}
